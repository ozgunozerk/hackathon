{"remainingRequest":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/src/views/blog/BlogTagPosts.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/src/views/blog/BlogTagPosts.vue","mtime":1651694082000},{"path":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1675802828112},{"path":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/node_modules/babel-loader/lib/index.js","mtime":1675802828111},{"path":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1675802828112},{"path":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/node_modules/vue-loader-v16/dist/index.js","mtime":1675802826271}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgTGF5b3V0IGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXRzL0xheW91dCcKICAgIGltcG9ydCBCcmVhZGNydW1iIGZyb20gJ0AvY29tcG9uZW50cy9icmVhZGNydW1iL0JyZWFkY3J1bWInCiAgICBpbXBvcnQgQmxvZ0NhcmQgZnJvbSAnQC9jb21wb25lbnRzL2Jsb2cvQmxvZ0NhcmQnCiAgICBpbXBvcnQgQmxvZ1BhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL3BhZ2luYXRpb24vQmxvZ1BhZ2luYXRpb24nCiAgICBpbXBvcnQgU2FsU2Nyb2xsQW5pbWF0aW9uTWl4aW4gZnJvbSAnQC9taXhpbnMvU2FsU2Nyb2xsQW5pbWF0aW9uTWl4aW4nCiAgICBpbXBvcnQgQmxvZ01peGluIGZyb20gJ0AvbWl4aW5zL0Jsb2dNaXhpbicKICAgIGltcG9ydCBBcHBGdW5jdGlvbnMgZnJvbSAnQC9oZWxwZXJzL0FwcEZ1bmN0aW9ucycKCiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgbmFtZTogJ0Jsb2dUYWdQb3N0cycsCiAgICAgICAgY29tcG9uZW50czoge0Jsb2dQYWdpbmF0aW9uLCBCbG9nQ2FyZCwgQnJlYWRjcnVtYiwgTGF5b3V0fSwKICAgICAgICBtaXhpbnM6IFtTYWxTY3JvbGxBbmltYXRpb25NaXhpbiwgQmxvZ01peGluXSwKICAgICAgICBkYXRhKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgdGFnOiB0aGlzLiRyb3V0ZS5wYXJhbXMuc2x1ZywKICAgICAgICAgICAgICAgIHRhZ1Bvc3RzOiBbXSwKICAgICAgICAgICAgICAgIGZpbHRlcmVkUm93czogJycsCiAgICAgICAgICAgICAgICBwYWdlU3RhcnQ6ICcnLAogICAgICAgICAgICAgICAgY291bnRPZlBhZ2U6ICcnLAogICAgICAgICAgICAgICAgQXBwRnVuY3Rpb25zCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbXB1dGVkOiB7CiAgICAgICAgICAgIHRhZ05hbWUoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50YWdQb3N0c1swXS50YWdzWzBdCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1ldGhvZHM6IHsKICAgICAgICAgICAgZ2V0VGFnUG9zdHMoKSB7CiAgICAgICAgICAgICAgICB0aGlzLnRhZ1Bvc3RzID0gdGhpcy5wb3N0cy5tYXAoYmxvZyA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgLi4uYmxvZywKICAgICAgICAgICAgICAgICAgICAgICAgdGFnczogYmxvZy50YWdzLmZpbHRlcihkYXRhID0+IEFwcEZ1bmN0aW9ucy5zbHVnaWZ5KGRhdGEpID09PSB0aGlzLnRhZykKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5maWx0ZXIoYmxvZyA9PiBibG9nLnRhZ3MubGVuZ3RoID4gMCk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBhZ2luYXRlZERhdGEoZmlsdGVyZWRSb3dzLCBwYWdlU3RhcnQsIGNvdW50T2ZQYWdlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkUm93cyA9IGZpbHRlcmVkUm93czsKICAgICAgICAgICAgICAgIHRoaXMucGFnZVN0YXJ0ID0gcGFnZVN0YXJ0OwogICAgICAgICAgICAgICAgdGhpcy5jb3VudE9mUGFnZSA9IGNvdW50T2ZQYWdlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjcmVhdGVkKCkgewogICAgICAgICAgICB0aGlzLmdldFRhZ1Bvc3RzKCk7CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/src/views/blog/BlogTagPosts.vue"],"names":[],"mappings":";IAyhD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEhD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAA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","file":"/Users/ozgunozerk/Developer/hackathon-costa-rica/nuron-vuejs/src/views/blog/BlogTagPosts.vue","sourceRoot":"","sourcesContent":["<template>\n    <layout>\n        <breadcrumb :title=\"tagName\" :current=\"tagName\"/>\n\n        <div class=\"rn-blog-area rn-section-gapTop\">\n            <div class=\"container\">\n                <div class=\"row g-5\">\n                    <template v-for=\"(blog, index) in filteredRows.slice(pageStart, pageStart + countOfPage)\"\n                              :key=\"`blog-${index}`\">\n                        <div class=\"col-xl-3 col-lg-4 col-md-6 col-12\">\n                            <blog-card :blog=\"blog\"/>\n                        </div>\n                    </template>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\" data-sal=\"slide-up\" data-sal-delay=\"550\" data-sal-duration=\"800\">\n                        <blog-pagination :posts=\"tagPosts\" @paginatedData=\"paginatedData\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </layout>\n</template>\n\n<script>\n    import Layout from '@/components/layouts/Layout'\n    import Breadcrumb from '@/components/breadcrumb/Breadcrumb'\n    import BlogCard from '@/components/blog/BlogCard'\n    import BlogPagination from '@/components/pagination/BlogPagination'\n    import SalScrollAnimationMixin from '@/mixins/SalScrollAnimationMixin'\n    import BlogMixin from '@/mixins/BlogMixin'\n    import AppFunctions from '@/helpers/AppFunctions'\n\n    export default {\n        name: 'BlogTagPosts',\n        components: {BlogPagination, BlogCard, Breadcrumb, Layout},\n        mixins: [SalScrollAnimationMixin, BlogMixin],\n        data() {\n            return {\n                tag: this.$route.params.slug,\n                tagPosts: [],\n                filteredRows: '',\n                pageStart: '',\n                countOfPage: '',\n                AppFunctions\n            }\n        },\n        computed: {\n            tagName() {\n                return this.tagPosts[0].tags[0]\n            }\n        },\n        methods: {\n            getTagPosts() {\n                this.tagPosts = this.posts.map(blog => {\n                    return {\n                        ...blog,\n                        tags: blog.tags.filter(data => AppFunctions.slugify(data) === this.tag)\n                    }\n                }).filter(blog => blog.tags.length > 0);\n            },\n            paginatedData(filteredRows, pageStart, countOfPage) {\n                this.filteredRows = filteredRows;\n                this.pageStart = pageStart;\n                this.countOfPage = countOfPage;\n            }\n        },\n        created() {\n            this.getTagPosts();\n        }\n    }\n</script>"]}]}